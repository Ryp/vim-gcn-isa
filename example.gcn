v_mov_b32     v0, 0                                   // 000000000000: 7E000280
v_mov_b32     v1, 0x3ecccccd                          // 000000000004: 7E0202FF 3ECCCCCD
v_mov_b32     v2, 1.0                                 // 00000000000C: 7E0402F2
exp           mrt0, v0, v1, v2, v2 done vm            // 000000000010: C400180F 02020100
s_load_dwordx2  s[4:5], s[0:1], 0x10
s_load_dwordx4  s[0:3], s[0:1], 0x00
v_lshlrev_b32  v0, 2, v0
s_waitcnt     lgkmcnt(0)
v_add_u32     v1, vcc, s2, v0
v_mov_b32     v2, s3
v_addc_u32    v2, vcc, v2, 0, vcc
v_add_u32     v3, vcc, s0, v0
v_mov_b32     v4, s1
v_addc_u32    v4, vcc, v4, 0, vcc
flat_load_dword  v1, v[1:2]
flat_load_dword  v2, v[3:4]
s_waitcnt     vmcnt(0) & lgkmcnt(0)
v_lshlrev_b32  v1, 2, v1
ds_bpermute_b32  v1, v1, v2
v_add_u32     v3, vcc, s4, v0
v_mov_b32     v2, s5
v_addc_u32    v4, vcc, v2, 0, vcc
s_waitcnt     lgkmcnt(0)
flat_store_dword  v[3:4], v1
s_load_dwordx2  s[4:5], s[0:1], 0x10  // load out_ptr into s[4:5] from kernarg
s_load_dwordx4  s[0:3], s[0:1], 0x00  // load in_ptr into s[0:1] and index_ptr into s[2:3] from kernarg
v_lshlrev_b32  v0, 2, v0              // v0 *= 4;
s_waitcnt     lgkmcnt(0)              // wait for memory reads to finish
v_add_u32     v1, vcc, s2, v0
v_mov_b32     v2, s3
v_addc_u32    v2, vcc, v2, 0, vcc
v_add_u32     v3, vcc, s0, v0
v_mov_b32     v4, s1
v_addc_u32    v4, vcc, v4, 0, vcc
flat_load_dword  v1, v[1:2] // load index[workitem_id] into v1
flat_load_dword  v2, v[3:4] // load in[workitem_id] into v2
s_waitcnt     vmcnt(0) & lgkmcnt(0) // wait for memory reads to finish
v_lshlrev_b32  v1, 2, v1
ds_bpermute_b32  v1, v1, v2
v_add_u32     v3, vcc, s4, v0
v_mov_b32     v2, s5
v_addc_u32    v4, vcc, v2, 0, vcc
s_waitcnt     lgkmcnt(0) // wait for permutation to finish
flat_store_dword  v[3:4], v1
s_mov_b32     m0, 0x00010000                          // 000000000000: BEFC00FF 00010000
v_mad_u32_u24  v23, s14, 16, v0                       // 000000000008: D1C30017 0401200E
v_mad_u32_u24  v24, s15, 16, v1                       // 000000000010: D1C30018 0405200F
s_load_dwordx8  s[16:23], s[2:3], 0x00                // 000000000018: C00E0401 00000000
s_load_dwordx8  s[24:31], s[12:13], 0x00              // 000000000020: C00E0606 00000000
v_add_u32     v4, vcc, v0, v23                        // 000000000028: 32082F00
v_add_u32     v5, vcc, v1, v24                        // 00000000002C: 320A3101
v_add_u32     v4, vcc, -7, v4                         // 000000000030: 320808C7
v_add_u32     v5, vcc, -7, v5                         // 000000000034: 320A0AC7
v_cvt_f32_i32  v4, v4                                 // 000000000038: 7E080B04
v_cvt_f32_i32  v5, v5                                 // 00000000003C: 7E0A0B05
s_andn2_b32   s0, s9, 0x3fff0000                      // 000000000040: 8900FF09 3FFF0000
s_mov_b32     s1, s0                                  // 000000000048: BE810000
s_mov_b32     s2, s10                                 // 00000000004C: BE82000A
s_mov_b32     s3, s11                                 // 000000000050: BE83000B
s_mov_b32     s0, s8                                  // 000000000054: BE800008
s_buffer_load_dwordx4  s[8:11], s[0:3], 0x60          // 000000000058: C02A0200 00000060
s_buffer_load_dwordx4  s[12:15], s[0:3], 0x00         // 000000000060: C02A0300 00000000
s_buffer_load_dwordx4  s[32:35], s[0:3], 0x30         // 000000000068: C02A0800 00000030
s_buffer_load_dwordx8  s[36:43], s[0:3], 0x10         // 000000000070: C02E0900 00000010
s_buffer_load_dwordx4  s[44:47], s[0:3], 0x40         // 000000000078: C02A0B00 00000040
s_buffer_load_dwordx4  s[0:3], s[0:3], 0x50           // 000000000080: C02A0000 00000050
s_waitcnt     lgkmcnt(0)                              // 000000000088: BF8C007F
v_mul_f32     v4, s8, v4                              // 00000000008C: 0A080808
v_mul_f32     v5, s9, v5                              // 000000000090: 0A0A0A09
v_lshlrev_b32  v6, 1, v0                              // 000000000094: 240C0081
v_lshlrev_b32  v7, 6, v1                              // 000000000098: 240E0286
v_add_u32     v6, vcc, v6, v7                         // 00000000009C: 320C0F06
v_lshlrev_b32  v6, 2, v6                              // 0000000000A0: 240C0C82
v_lshlrev_b32  v1, 5, v1                              // 0000000000A4: 24020285
v_add_u32     v0, vcc, v0, v1                         // 0000000000A8: 32000300
v_lshlrev_b32  v0, 2, v0                              // 0000000000AC: 24000082
v_add_u32     v1, vcc, 0x00000410, v0                 // 0000000000B0: 320200FF 00000410
v_add_f32     v7, s13, -0.5                           // 0000000000B8: D1010007 0001E20D
v_add_f32     v8, s15, -0.5                           // 0000000000C0: D1010008 0001E20F
v_add_u32     v9, vcc, 0x00000400, v0                 // 0000000000C8: 321200FF 00000400
v_add_u32     v10, vcc, 0x00000220, v0                // 0000000000D0: 321400FF 00000220
v_add_u32     v11, vcc, 0x00000440, v0                // 0000000000D8: 321600FF 00000440
v_add_f32     v12, s36, -0.5                          // 0000000000E0: D101000C 0001E224
v_add_f32     v13, s38, -0.5                          // 0000000000E8: D101000D 0001E226
image_gather4_lz  v14, v4, s[16:23], s[4:7]           // 0000000000F0: F11C0100 00240E04
s_waitcnt     vmcnt(0)                                // 0000000000F8: BF8C0F70
ds_write2_b32  v6, v17, v16 offset1:1                 // 0000000000FC: D81C0100 00101106
ds_write2_b32  v6, v14, v15 offset0:32 offset1:33     // 000000000104: D81C2120 000F0E06
s_waitcnt     lgkmcnt(0)                              // 00000000010C: BF8C007F
s_barrier                                             // 000000000110: BF8A0000
ds_read2_b32  v[4:5], v1 offset1:4                    // 000000000114: D86E0400 04000001
ds_read2_b32  v[14:15], v9 offset0:12                 // 00000000011C: D86E000C 0E000009
s_waitcnt     lgkmcnt(1)                              // 000000000124: BF8C017F
v_rcp_f32     v5, v5                                  // 000000000128: 7E0A4505
ds_read2st64_b32  v[9:10], v10 offset1:4              // 00000000012C: D8700400 0900000A
v_mul_f32     v6, s13, v5                             // 000000000134: 0A0C0A0D
v_mul_f32     v16, s15, v5                            // 000000000138: 0A200A0F
v_mad_f32     v4, v4, v6, -v7                         // 00000000013C: D1C10004 841E0D04
v_mul_f32     v17, s10, v4 clamp                      // 000000000144: D1058011 0002080A
s_waitcnt     lgkmcnt(1)                              // 00000000014C: BF8C017F
v_mad_f32     v15, v15, v16, -v8                      // 000000000150: D1C1000F 8422210F
ds_read2_b32  v[18:19], v11 offset0:248               // 000000000158: D86E00F8 1200000B
v_mad_f32     v14, v14, v6, -v7                       // 000000000160: D1C1000E 841E0D0E
v_max_f32     v20, v17, v14                           // 000000000168: 16281D11
v_mul_f32     v14, s10, v14 clamp                     // 00000000016C: D105800E 00021C0A
v_min_f32     v20, 1.0, v20                           // 000000000174: 142828F2
v_max_f32     v4, v4, v14                             // 000000000178: 16081D04
v_min_f32     v4, 1.0, v4                             // 00000000017C: 140808F2
v_add_f32     v4, v20, v4                             // 000000000180: 02080914
v_mad_f32     v4, -v14, v17, v4                       // 000000000184: D1C10004 2412230E
s_waitcnt     lgkmcnt(1)                              // 00000000018C: BF8C017F
v_mad_f32     v9, v9, v6, -v7                         // 000000000190: D1C10009 841E0D09
ds_read2_b32  v[20:21], v0 offset0:8 offset1:202      // 000000000198: D86ECA08 14000000
v_mul_f32     v14, s10, v9 clamp                      // 0000000001A0: D105800E 0002120A
v_mad_f32     v7, v10, v6, -v7                        // 0000000001A8: D1C10007 841E0D0A
v_max_f32     v6, v14, v7                             // 0000000001B0: 160C0F0E
v_mul_f32     v7, s10, v7 clamp                       // 0000000001B4: D1058007 00020E0A
v_min_f32     v6, 1.0, v6                             // 0000000001BC: 140C0CF2
v_max_f32     v9, v9, v7                              // 0000000001C0: 16120F09
v_min_f32     v9, 1.0, v9                             // 0000000001C4: 141212F2
v_add_f32     v6, v6, v9                              // 0000000001C8: 020C1306
v_mad_f32     v6, -v7, v14, v6                        // 0000000001CC: D1C10006 241A1D07
v_add_f32     v4, v4, v6                              // 0000000001D4: 02080D04
s_waitcnt     lgkmcnt(1)                              // 0000000001D8: BF8C017F
v_mad_f32     v6, v19, v16, -v8                       // 0000000001DC: D1C10006 84222113
ds_read2_b32  v[9:10], v1 offset0:66 offset1:70       // 0000000001E4: D86E4642 09000001
v_mad_f32     v7, v18, v16, -v8                       // 0000000001EC: D1C10007 84222112
s_waitcnt     lgkmcnt(1)                              // 0000000001F4: BF8C017F
v_mad_f32     v8, v20, v16, -v8                       // 0000000001F8: D1C10008 84222114
ds_read2_b32  v[16:17], v0 offset0:198 offset1:140    // 000000000200: D86E8CC6 10000000
v_mul_f32     v14, s10, v8 clamp                      // 000000000208: D105800E 0002100A
v_max_f32     v18, v7, v14                            // 000000000210: 16241D07
v_mul_f32     v7, s10, v7 clamp                       // 000000000214: D1058007 00020E0A
v_min_f32     v18, 1.0, v18                           // 00000000021C: 142424F2
v_max_f32     v8, v8, v7                              // 000000000220: 16100F08
v_min_f32     v8, 1.0, v8                             // 000000000224: 141010F2
v_add_f32     v8, v18, v8                             // 000000000228: 02101112
v_mad_f32     v8, -v7, v14, v8                        // 00000000022C: D1C10008 24221D07
v_mul_f32     v7, s10, v15 clamp                      // 000000000234: D1058007 00021E0A
v_max_f32     v14, v6, v7                             // 00000000023C: 161C0F06
v_mul_f32     v6, s10, v6 clamp                       // 000000000240: D1058006 00020C0A
v_max_f32     v15, v15, v6                            // 000000000248: 161E0D0F
v_min_f32     v15, 1.0, v15                           // 00000000024C: 141E1EF2
v_min_f32     v14, 1.0, v14                           // 000000000250: 141C1CF2
v_add_f32     v14, v15, v14                           // 000000000254: 021C1D0F
v_mad_f32     v14, -v6, v7, v14                       // 000000000258: D1C1000E 243A0F06
v_add_f32     v6, v8, v14                             // 000000000260: 020C1D08
v_mul_f32     v4, s33, v4                             // 000000000264: 0A080821
v_mul_f32     v6, v6, s35 div:2                       // 000000000268: D1050006 18004706
v_mac_f32     v6, 0.5, v4                             // 000000000270: 2C0C08F0
v_mul_f32     v4, s36, v5                             // 000000000274: 0A080A24
v_mul_f32     v7, s38, v5                             // 000000000278: 0A0E0A26
v_mul_f32     v8, s40, v5                             // 00000000027C: 0A100A28
v_mul_f32     v14, s43, v5                            // 000000000280: 0A1C0A2B
v_mul_f32     v5, s42, v5                             // 000000000284: 0A0A0A2A
v_mad_f32     v15, v21, v4, -v12                      // 000000000288: D1C1000F 84320915
v_mul_f32     v18, s10, v15 clamp                     // 000000000290: D1058012 00021E0A
s_waitcnt     lgkmcnt(1)                              // 000000000298: BF8C017F
v_mad_f32     v10, v10, v4, -v12                      // 00000000029C: D1C1000A 8432090A
ds_read2_b32  v[19:20], v1 offset0:128 offset1:136    // 0000000002A4: D86E8880 13000001
v_mad_f32     v9, v9, v4, -v12                        // 0000000002AC: D1C10009 84320909
v_max_f32     v21, v18, v9                            // 0000000002B4: 162A1312
v_mul_f32     v9, s10, v9 clamp                       // 0000000002B8: D1058009 0002120A
v_min_f32     v21, 1.0, v21                           // 0000000002C0: 142A2AF2
v_max_f32     v15, v15, v9                            // 0000000002C4: 161E130F
v_min_f32     v15, 1.0, v15                           // 0000000002C8: 141E1EF2
v_add_f32     v15, v21, v15                           // 0000000002CC: 021E1F15
v_mad_f32     v15, -v9, v18, v15                      // 0000000002D0: D1C1000F 243E2509
s_waitcnt     lgkmcnt(1)                              // 0000000002D8: BF8C017F
v_mad_f32     v12, v16, v4, -v12                      // 0000000002DC: D1C1000C 84320910
ds_read2_b32  v[21:22], v0 offset0:132 offset1:78     // 0000000002E4: D86E4E84 15000000
v_mul_f32     v4, s10, v12 clamp                      // 0000000002EC: D1058004 0002180A
v_max_f32     v9, v10, v4                             // 0000000002F4: 1612090A
v_mul_f32     v10, s10, v10 clamp                     // 0000000002F8: D105800A 0002140A
v_min_f32     v9, 1.0, v9                             // 000000000300: 141212F2
v_max_f32     v12, v12, v10                           // 000000000304: 1618150C
v_min_f32     v12, 1.0, v12                           // 000000000308: 141818F2
v_add_f32     v9, v9, v12                             // 00000000030C: 02121909
v_mad_f32     v9, -v10, v4, v9                        // 000000000310: D1C10009 2426090A
v_add_f32     v4, v15, v9                             // 000000000318: 0208130F
v_mul_f32     v4, s44, v4                             // 00000000031C: 0A08082C
v_mac_f32     v6, 0.5, v4                             // 000000000320: 2C0C08F0
v_add_f32     v4, s40, -0.5                           // 000000000324: D1010004 0001E228
v_add_f32     v9, s43, -0.5                           // 00000000032C: D1010009 0001E22B
v_add_f32     v10, s42, -0.5                          // 000000000334: D101000A 0001E22A
v_mad_f32     v12, v17, v8, -v4                       // 00000000033C: D1C1000C 84121111
v_mul_f32     v15, s10, v12 clamp                     // 000000000344: D105800F 0002180A
s_waitcnt     lgkmcnt(1)                              // 00000000034C: BF8C017F
v_mad_f32     v16, v20, v8, -v4                       // 000000000350: D1C10010 84121114
ds_read2_b32  v[17:18], v1 offset0:190 offset1:202    // 000000000358: D86ECABE 11000001
v_mad_f32     v19, v19, v8, -v4                       // 000000000360: D1C10013 84121113
v_max_f32     v20, v15, v19                           // 000000000368: 1628270F
v_mul_f32     v19, s10, v19 clamp                     // 00000000036C: D1058013 0002260A
v_min_f32     v20, 1.0, v20                           // 000000000374: 142828F2
v_max_f32     v12, v12, v19                           // 000000000378: 1618270C
v_min_f32     v12, 1.0, v12                           // 00000000037C: 141818F2
v_add_f32     v12, v20, v12                           // 000000000380: 02181914
v_mad_f32     v12, -v19, v15, v12                     // 000000000384: D1C1000C 24321F13
s_waitcnt     lgkmcnt(1)                              // 00000000038C: BF8C017F
v_mad_f32     v4, v21, v8, -v4                        // 000000000390: D1C10004 84121115
ds_read2_b32  v[19:20], v0 offset0:66 offset1:70      // 000000000398: D86E4642 13000000
v_mul_f32     v8, s10, v4 clamp                       // 0000000003A0: D1058008 0002080A
v_max_f32     v15, v16, v8                            // 0000000003A8: 161E1110
v_mul_f32     v16, s10, v16 clamp                     // 0000000003AC: D1058010 0002200A
v_min_f32     v15, 1.0, v15                           // 0000000003B4: 141E1EF2
v_max_f32     v4, v4, v16                             // 0000000003B8: 16082104
v_min_f32     v4, 1.0, v4                             // 0000000003BC: 140808F2
v_add_f32     v4, v15, v4                             // 0000000003C0: 0208090F
v_mad_f32     v4, -v16, v8, v4                        // 0000000003C4: D1C10004 24121110
v_add_f32     v4, v12, v4                             // 0000000003CC: 0208090C
v_mul_f32     v4, s0, v4                              // 0000000003D0: 0A080800
v_mac_f32     v6, 0.5, v4                             // 0000000003D4: 2C0C08F0
v_mad_f32     v4, v22, v14, -v9                       // 0000000003D8: D1C10004 84261D16
v_mul_f32     v8, s10, v4 clamp                       // 0000000003E0: D1058008 0002080A
s_waitcnt     lgkmcnt(1)                              // 0000000003E8: BF8C017F
v_mad_f32     v12, v18, v14, -v9                      // 0000000003EC: D1C1000C 84261D12
ds_read2_b32  v[15:16], v1 offset0:198 offset1:194    // 0000000003F4: D86EC2C6 0F000001
v_mad_f32     v17, v17, v14, -v9                      // 0000000003FC: D1C10011 84261D11
v_max_f32     v18, v8, v17                            // 000000000404: 16242308
v_mul_f32     v17, s10, v17 clamp                     // 000000000408: D1058011 0002220A
v_min_f32     v18, 1.0, v18                           // 000000000410: 142424F2
v_max_f32     v4, v4, v17                             // 000000000414: 16082304
v_min_f32     v4, 1.0, v4                             // 000000000418: 140808F2
v_add_f32     v4, v18, v4                             // 00000000041C: 02080912
v_mad_f32     v4, -v17, v8, v4                        // 000000000420: D1C10004 24121111
s_waitcnt     lgkmcnt(1)                              // 000000000428: BF8C017F
v_mad_f32     v9, v19, v14, -v9                       // 00000000042C: D1C10009 84261D13
ds_read2_b32  v[17:18], v0 offset0:74 offset1:194     // 000000000434: D86EC24A 11000000
v_mul_f32     v8, s10, v9 clamp                       // 00000000043C: D1058008 0002120A
v_max_f32     v14, v12, v8                            // 000000000444: 161C110C
v_mul_f32     v12, s10, v12 clamp                     // 000000000448: D105800C 0002180A
v_min_f32     v14, 1.0, v14                           // 000000000450: 141C1CF2
v_max_f32     v9, v9, v12                             // 000000000454: 16121909
v_min_f32     v9, 1.0, v9                             // 000000000458: 141212F2
v_add_f32     v9, v14, v9                             // 00000000045C: 0212130E
v_mad_f32     v9, -v12, v8, v9                        // 000000000460: D1C10009 2426110C
v_add_f32     v4, v4, v9                              // 000000000468: 02081304
v_mul_f32     v4, s3, v4                              // 00000000046C: 0A080803
v_mac_f32     v6, 0.5, v4                             // 000000000470: 2C0C08F0
v_mad_f32     v4, v20, v7, -v13                       // 000000000474: D1C10004 84360F14
v_mul_f32     v8, s10, v4 clamp                       // 00000000047C: D1058008 0002080A
s_waitcnt     lgkmcnt(1)                              // 000000000484: BF8C017F
v_mad_f32     v9, v16, v7, -v13                       // 000000000488: D1C10009 84360F10
ds_read2_b32  v[19:20], v1 offset0:74 offset1:62      // 000000000490: D86E3E4A 13000001
v_mad_f32     v12, v15, v7, -v13                      // 000000000498: D1C1000C 84360F0F
v_max_f32     v14, v8, v12                            // 0000000004A0: 161C1908
v_mul_f32     v12, s10, v12 clamp                     // 0000000004A4: D105800C 0002180A
v_min_f32     v14, 1.0, v14                           // 0000000004AC: 141C1CF2
v_max_f32     v4, v4, v12                             // 0000000004B0: 16081904
v_min_f32     v4, 1.0, v4                             // 0000000004B4: 140808F2
v_add_f32     v4, v14, v4                             // 0000000004B8: 0208090E
v_mad_f32     v4, -v12, v8, v4                        // 0000000004BC: D1C10004 2412110C
s_waitcnt     lgkmcnt(1)                              // 0000000004C4: BF8C017F
v_mad_f32     v8, v17, v7, -v13                       // 0000000004C8: D1C10008 84360F11
ds_read2_b32  v[14:15], v0 offset0:206 offset1:4      // 0000000004D0: D86E04CE 0E000000
v_mul_f32     v12, s10, v8 clamp                      // 0000000004D8: D105800C 0002100A
v_max_f32     v16, v9, v12                            // 0000000004E0: 16201909
v_mul_f32     v9, s10, v9 clamp                       // 0000000004E4: D1058009 0002120A
v_min_f32     v16, 1.0, v16                           // 0000000004EC: 142020F2
v_max_f32     v8, v8, v9                              // 0000000004F0: 16101308
v_min_f32     v8, 1.0, v8                             // 0000000004F4: 141010F2
v_add_f32     v8, v16, v8                             // 0000000004F8: 02101110
v_mad_f32     v8, -v9, v12, v8                        // 0000000004FC: D1C10008 24221909
v_add_f32     v4, v4, v8                              // 000000000504: 02081104
s_waitcnt     lgkmcnt(1)                              // 000000000508: BF8C017F
v_mad_f32     v8, v19, v7, -v13                       // 00000000050C: D1C10008 84360F13
v_mad_f32     v9, v20, v7, -v13                       // 000000000514: D1C10009 84360F14
ds_read2_b32  v[11:12], v11 offset0:252 offset1:244   // 00000000051C: D86EF4FC 0B00000B
v_mad_f32     v16, v18, v7, -v13                      // 000000000524: D1C10010 84360F12
v_mul_f32     v17, s10, v16 clamp                     // 00000000052C: D1058011 0002200A
v_max_f32     v18, v8, v17                            // 000000000534: 16242308
v_mul_f32     v8, s10, v8 clamp                       // 000000000538: D1058008 0002100A
v_min_f32     v18, 1.0, v18                           // 000000000540: 142424F2
v_max_f32     v16, v16, v8                            // 000000000544: 16201110
v_min_f32     v16, 1.0, v16                           // 000000000548: 142020F2
v_add_f32     v16, v18, v16                           // 00000000054C: 02202112
v_mad_f32     v16, -v8, v17, v16                      // 000000000550: D1C10010 24422308
v_add_f32     v4, v4, v16                             // 000000000558: 02082104
s_waitcnt     lgkmcnt(1)                              // 00000000055C: BF8C017F
v_mad_f32     v13, v14, v7, -v13                      // 000000000560: D1C1000D 84360F0E
ds_read2_b32  v[7:8], v0 offset0:144 offset1:12       // 000000000568: D86E0C90 07000000
v_mul_f32     v14, s10, v13 clamp                     // 000000000570: D105800E 00021A0A
v_max_f32     v16, v9, v14                            // 000000000578: 16201D09
v_mul_f32     v9, s10, v9 clamp                       // 00000000057C: D1058009 0002120A
v_min_f32     v16, 1.0, v16                           // 000000000584: 142020F2
v_max_f32     v13, v13, v9                            // 000000000588: 161A130D
v_min_f32     v13, 1.0, v13                           // 00000000058C: 141A1AF2
v_add_f32     v13, v16, v13                           // 000000000590: 021A1B10
v_mad_f32     v13, -v9, v14, v13                      // 000000000594: D1C1000D 24361D09
v_add_f32     v4, v4, v13                             // 00000000059C: 02081B04
v_mul_f32     v4, s46, v4                             // 0000000005A0: 0A08082E
v_madmk_f32   v4, v4, 0x3e800000, v6                  // 0000000005A4: 2E080D04 3E800000
s_waitcnt     lgkmcnt(1)                              // 0000000005AC: BF8C017F
v_mad_f32     v6, v11, v5, -v10                       // 0000000005B0: D1C10006 842A0B0B
v_mad_f32     v9, v12, v5, -v10                       // 0000000005B8: D1C10009 842A0B0C
ds_read2_b32  v[11:12], v1 offset0:140 offset1:124    // 0000000005C0: D86E7C8C 0B000001
v_mad_f32     v1, v15, v5, -v10                       // 0000000005C8: D1C10001 842A0B0F
v_mul_f32     v13, s10, v1 clamp                      // 0000000005D0: D105800D 0002020A
v_max_f32     v14, v6, v13                            // 0000000005D8: 161C1B06
v_mul_f32     v6, s10, v6 clamp                       // 0000000005DC: D1058006 00020C0A
v_min_f32     v14, 1.0, v14                           // 0000000005E4: 141C1CF2
v_max_f32     v1, v1, v6                              // 0000000005E8: 16020D01
v_min_f32     v1, 1.0, v1                             // 0000000005EC: 140202F2
v_add_f32     v1, v14, v1                             // 0000000005F0: 0202030E
v_mad_f32     v1, -v6, v13, v1                        // 0000000005F4: D1C10001 24061B06
s_waitcnt     lgkmcnt(1)                              // 0000000005FC: BF8C017F
v_mad_f32     v6, v7, v5, -v10                        // 000000000600: D1C10006 842A0B07
v_mad_f32     v7, v8, v5, -v10                        // 000000000608: D1C10007 842A0B08
v_mul_f32     v8, s10, v7 clamp                       // 000000000610: D1058008 00020E0A
v_max_f32     v13, v9, v8                             // 000000000618: 161A1109
v_mul_f32     v9, s10, v9 clamp                       // 00000000061C: D1058009 0002120A
v_min_f32     v13, 1.0, v13                           // 000000000624: 141A1AF2
v_max_f32     v7, v7, v9                              // 000000000628: 160E1307
v_min_f32     v7, 1.0, v7                             // 00000000062C: 140E0EF2
v_add_f32     v7, v13, v7                             // 000000000630: 020E0F0D
v_mad_f32     v7, -v9, v8, v7                         // 000000000634: D1C10007 241E1109
v_add_f32     v1, v1, v7                              // 00000000063C: 02020F01
s_waitcnt     lgkmcnt(0)                              // 000000000640: BF8C007F
v_mad_f32     v7, v11, v5, -v10                       // 000000000644: D1C10007 842A0B0B
v_mad_f32     v8, v12, v5, -v10                       // 00000000064C: D1C10008 842A0B0C
v_mul_f32     v9, s10, v7 clamp                       // 000000000654: D1058009 00020E0A
v_mul_f32     v11, s10, v6 clamp                      // 00000000065C: D105800B 00020C0A
v_max_f32     v12, v8, v11                            // 000000000664: 16181708
v_mul_f32     v8, s10, v8 clamp                       // 000000000668: D1058008 0002100A
v_min_f32     v12, 1.0, v12                           // 000000000670: 141818F2
v_max_f32     v6, v6, v8                              // 000000000674: 160C1106
v_min_f32     v6, 1.0, v6                             // 000000000678: 140C0CF2
v_add_f32     v6, v12, v6                             // 00000000067C: 020C0D0C
v_mad_f32     v6, -v8, v11, v6                        // 000000000680: D1C10006 241A1708
ds_read_b32   v0, v0 offset:512                       // 000000000688: D86C0200 00000000
s_waitcnt     lgkmcnt(0)                              // 000000000690: BF8C007F
v_mad_f32     v10, v0, v5, -v10                       // 000000000694: D1C1000A 842A0B00
v_mul_f32     v0, s10, v10 clamp                      // 00000000069C: D1058000 0002140A
v_max_f32     v5, v7, v0                              // 0000000006A4: 160A0107
v_max_f32     v7, v10, v9                             // 0000000006A8: 160E130A
v_min_f32     v7, 1.0, v7                             // 0000000006AC: 140E0EF2
v_min_f32     v5, 1.0, v5                             // 0000000006B0: 140A0AF2
v_add_f32     v5, v7, v5                              // 0000000006B4: 020A0B07
v_mad_f32     v5, -v9, v0, v5                         // 0000000006B8: D1C10005 24160109
v_add_f32     v0, v1, v5                              // 0000000006C0: 02000B01
v_add_f32     v0, v0, v6                              // 0000000006C4: 02000D00
v_mul_f32     v0, s2, v0                              // 0000000006C8: 0A000002
v_madmk_f32   v0, v0, 0x3e800000, v4                  // 0000000006CC: 2E000900 3E800000
v_mul_f32     v3, s11, v0                             // 0000000006D4: 0A06000B
v_mov_b32     v4, v3                                  // 0000000006D8: 7E080303
v_mov_b32     v5, v3                                  // 0000000006DC: 7E0A0303
v_mov_b32     v6, v3                                  // 0000000006E0: 7E0C0303
image_store   v[3:6], v[23:26], s[24:31] dmask:0xf unorm // 0000000006E4: F0201F00 00060317
s_mov_b32     m0, 0x00010000                          // 000000000000: BEFC00FF 00010000
v_mad_u32_u24  v10, s16, 8, v0                        // 000000000008: D1C3000A 04011010
v_mad_u32_u24  v11, s17, 8, v1                        // 000000000010: D1C3000B 04051011
v_lshrrev_b32  v17, 2, v10                            // 000000000018: 20221482
v_lshlrev_b32  v2, 3, v1                              // 00000000001C: 24040283
v_add_u32     v13, vcc, v0, v2                        // 000000000020: 321A0500
s_lshl_b32    s0, s16, 4                              // 000000000024: 8E008410
s_lshl_b32    s1, s17, 4                              // 000000000028: 8E018411
v_add_u32     v15, vcc, s0, v0                        // 00000000002C: 321E0000
v_add_u32     v16, vcc, s1, v1                        // 000000000030: 32200201
v_lshlrev_b32  v2, 4, v1                              // 000000000034: 24040284
v_add_u32     v2, vcc, v0, v2                         // 000000000038: 32040500
s_andn2_b32   s0, s13, 0x3fff0000                     // 00000000003C: 8900FF0D 3FFF0000
v_lshlrev_b32  v14, 2, v2                             // 000000000044: 241C0482
v_add_u32     v7, vcc, 8, v16                         // 000000000048: 320E2088
v_add_u32     v4, vcc, 8, v15                         // 00000000004C: 32081E88
v_mov_b32     v5, v16                                 // 000000000050: 7E0A0310
v_mov_b32     v6, v15                                 // 000000000054: 7E0C030F
v_mov_b32     v8, v4                                  // 000000000058: 7E100304
v_mov_b32     v9, v7                                  // 00000000005C: 7E120307
image_load    v2, v[15:18], s[4:11] unorm             // 000000000060: F0001100 0001020F
image_load    v3, v[4:7], s[4:11] unorm               // 000000000068: F0001100 00010304
image_load    v4, v[6:9], s[4:11] unorm               // 000000000070: F0001100 00010406
image_load    v5, v[8:11], s[4:11] unorm              // 000000000078: F0001100 00010508
v_lshlrev_b32  v0, 1, v0                              // 000000000080: 24000081
v_lshlrev_b32  v1, 5, v1                              // 000000000084: 24020285
v_add_u32     v0, vcc, v0, v1                         // 000000000088: 32000300
v_lshlrev_b32  v0, 2, v0                              // 00000000008C: 24000082
v_lshlrev_b32  v1, 2, v11                             // 000000000090: 24021682
v_bfi_b32     v1, 12, v1, 0                           // 000000000094: D1CA0001 0202028C
v_bfi_b32     v19, 3, v10, v1                         // 00000000009C: D1CA0013 04061483
v_lshrrev_b32  v18, 2, v11                            // 0000000000A4: 20241682
v_and_b32     v8, 9, v13                              // 0000000000A8: 26101A89
s_mov_b32     s4, s12                                 // 0000000000AC: BE84000C
s_mov_b32     s5, s0                                  // 0000000000B0: BE850000
s_mov_b32     s6, s14                                 // 0000000000B4: BE86000E
s_mov_b32     s7, s15                                 // 0000000000B8: BE87000F
s_buffer_load_dwordx2  s[0:1], s[4:7], 0x00           // 0000000000BC: C0260002 00000000
s_load_dwordx8  s[4:11], s[2:3], 0x20                 // 0000000000C4: C00E0101 00000020
s_load_dwordx8  s[12:19], s[2:3], 0x40                // 0000000000CC: C00E0301 00000040
s_waitcnt     vmcnt(3) & lgkmcnt(0)                   // 0000000000D4: BF8C0073
v_add_f32     v1, s0, v2                              // 0000000000D8: 02020400
v_mul_f32     v1, s1, v1                              // 0000000000DC: 0A020201
s_waitcnt     vmcnt(2)                                // 0000000000E0: BF8C0F72
v_add_f32     v2, s0, v3                              // 0000000000E4: 02040600
v_mul_f32     v2, s1, v2                              // 0000000000E8: 0A040401
ds_write2_b32  v14, v1, v2 offset1:8                  // 0000000000EC: D81C0800 0002010E
s_waitcnt     vmcnt(1)                                // 0000000000F4: BF8C0F71
v_add_f32     v1, s0, v4                              // 0000000000F8: 02020800
v_mul_f32     v1, s1, v1                              // 0000000000FC: 0A020201
s_waitcnt     vmcnt(0)                                // 000000000100: BF8C0F70
v_add_f32     v2, s0, v5                              // 000000000104: 02040A00
v_mul_f32     v2, s1, v2                              // 000000000108: 0A040401
ds_write2_b32  v14, v1, v2 offset0:128 offset1:136    // 00000000010C: D81C8880 0002010E
ds_read_b32   v0, v0                                  // 000000000114: D86C0000 00000000
s_waitcnt     lgkmcnt(0)                              // 00000000011C: BF8C007F
v_mov_b32     v1, v0                                  // 000000000120: 7E020300
v_mov_b32     v2, v0                                  // 000000000124: 7E040300
v_mov_b32     v3, v0                                  // 000000000128: 7E060300
image_store   v[0:3], v[10:13], s[4:11] dmask:0xf unorm // 00000000012C: F0201F00 0001000A
image_store   v[0:3], v[17:20], s[12:19] dmask:0xf unorm da // 000000000134: F0205F00 00030011
v_cmp_eq_u32  vcc, 0, v8                              // 00000000013C: 7D941080
s_and_saveexec_b64  s[0:1], vcc                       // 000000000140: BE80206A
s_cbranch_execz  label_0064                           // 000000000144: BF880012
s_load_dwordx8  s[4:11], s[2:3], 0x60                 // 000000000148: C00E0101 00000060
s_load_dwordx8  s[12:19], s[2:3], 0x80                // 000000000150: C00E0301 00000080
v_lshrrev_b32  v4, 1, v10                             // 000000000158: 20081481
v_lshrrev_b32  v5, 1, v11                             // 00000000015C: 200A1681
v_lshrrev_b32  v6, 3, v10                             // 000000000160: 200C1483
v_lshlrev_b32  v7, 1, v11                             // 000000000164: 240E1681
v_bfi_b32     v7, 12, v7, 0                           // 000000000168: D1CA0007 02020E8C
v_bfi_b32     v8, 3, v4, v7                           // 000000000170: D1CA0008 041E0883
s_waitcnt     lgkmcnt(0)                              // 000000000178: BF8C007F
image_store   v[0:3], v[4:7], s[4:11] dmask:0xf unorm // 00000000017C: F0201F00 00010004
v_lshrrev_b32  v7, 3, v11                             // 000000000184: 200E1683
image_store   v[0:3], v[6:9], s[12:19] dmask:0xf unorm da // 000000000188: F0205F00 00030006
label_0064:
s_mov_b32     m0, 0x00010000                          // 000000000000: BEFC00FF 00010000
v_mad_u32_u24  v2, s14, 8, v0                         // 000000000008: D1C30002 0401100E
v_mad_u32_u24  v3, s15, 8, v1                         // 000000000010: D1C30003 0405100F
v_lshlrev_b32  v4, 3, v1                              // 000000000018: 24080283
v_add_u32     v4, vcc, v0, v4                         // 00000000001C: 32080900
s_andn2_b32   s0, s9, 0x3fff0000                      // 000000000020: 8900FF09 3FFF0000
s_mov_b32     s9, s0                                  // 000000000028: BE890000
s_buffer_load_dwordx4  s[16:19], s[8:11], 0x00        // 00000000002C: C02A0404 00000000
s_load_dwordx8  s[20:27], s[2:3], 0x00                // 000000000034: C00E0501 00000000
v_add_u32     v5, vcc, v0, v2                         // 00000000003C: 320A0500
v_add_u32     v6, vcc, v1, v3                         // 000000000040: 320C0701
s_load_dwordx8  s[28:35], s[2:3], 0x40                // 000000000044: C00E0701 00000040
s_load_dwordx8  s[36:43], s[2:3], 0x60                // 00000000004C: C00E0901 00000060
v_add_u32     v5, vcc, -2, v5                         // 000000000054: 320A0AC2
v_add_u32     v6, vcc, -2, v6                         // 000000000058: 320C0CC2
v_cvt_f32_i32  v5, v5                                 // 00000000005C: 7E0A0B05
v_cvt_f32_i32  v6, v6                                 // 000000000060: 7E0C0B06
s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
v_mul_f32     v5, s16, v5                             // 000000000068: 0A0A0A10
v_mul_f32     v6, s17, v6                             // 00000000006C: 0A0C0C11
image_gather4_lz  v7, v5, s[20:27], s[4:7]            // 000000000070: F11C0100 00250705
s_nop         0x0000                                  // 000000000078: BF800000
image_gather4_lz  v11, v5, s[28:35], s[4:7]           // 00000000007C: F11C0100 00270B05
s_nop         0x0000                                  // 000000000084: BF800000
image_gather4_lz  v15, v5, s[36:43], s[4:7]           // 000000000088: F11C0100 00290F05
v_lshlrev_b32  v5, 1, v0                              // 000000000090: 240A0081
v_lshlrev_b32  v6, 5, v1                              // 000000000094: 240C0285
s_waitcnt     vmcnt(2)                                // 000000000098: BF8C0F72
v_rcp_f32     v7, v7                                  // 00000000009C: 7E0E4507
v_rcp_f32     v8, v8                                  // 0000000000A0: 7E104508
v_rcp_f32     v9, v9                                  // 0000000000A4: 7E124509
v_rcp_f32     v10, v10                                // 0000000000A8: 7E14450A
v_add_u32     v5, vcc, v5, v6                         // 0000000000AC: 320A0D05
s_waitcnt     vmcnt(0)                                // 0000000000B0: BF8C0F70
v_min_f32     v6, v11, v15                            // 0000000000B4: 140C1F0B
v_min_f32     v11, v12, v16                           // 0000000000B8: 1416210C
v_min_f32     v12, v13, v17                           // 0000000000BC: 1418230D
v_min_f32     v13, v14, v18                           // 0000000000C0: 141A250E
v_lshlrev_b32  v5, 2, v5                              // 0000000000C4: 240A0A82
v_mul_f32     v6, 1.0, v6                             // 0000000000C8: 0A0C0CF2
v_mul_f32     v11, 1.0, v11                           // 0000000000CC: 0A1616F2
v_mul_f32     v12, 1.0, v12                           // 0000000000D0: 0A1818F2
v_mul_f32     v13, 1.0, v13                           // 0000000000D4: 0A1A1AF2
v_add_u32     v14, vcc, 0x00000400, v5                // 0000000000D8: 321C0AFF 00000400
ds_write2_b32  v14, v13, v12 offset1:1                // 0000000000E0: D81C0100 000C0D0E
ds_write2_b32  v14, v6, v11 offset0:16 offset1:17     // 0000000000E8: D81C1110 000B060E
ds_write2_b32  v5, v10, v9 offset1:1                  // 0000000000F0: D81C0100 00090A05
ds_write2_b32  v5, v7, v8 offset0:16 offset1:17       // 0000000000F8: D81C1110 00080705
v_cmp_gt_u32  vcc, 39, v4                             // 000000000100: 7D9808A7
v_cmp_lt_u32  s[0:1], v4, 45                          // 000000000104: D0C90000 00015B04
s_and_saveexec_b64  s[14:15], vcc                     // 00000000010C: BE8E206A
s_cbranch_execz  label_00CE                           // 000000000110: BF880089
s_mov_b32     s28, 0xaaaaaaab                         // 000000000114: BE9C00FF AAAAAAAB
v_mul_hi_u32  v5, v4, s28                             // 00000000011C: D2860005 00003904
v_lshrrev_b32  v5, 1, v5                              // 000000000124: 200A0A81
v_mul_lo_u32  v6, 3, v5                               // 000000000128: D2850006 00020A83
v_sub_u32     v6, vcc, v4, v6                         // 000000000130: 340C0D04
v_mul_lo_u32  v6, v6, 3                               // 000000000134: D2850006 00010706
v_lshlrev_b32  v5, 4, v5                              // 00000000013C: 240A0A84
v_add_u32     v5, vcc, v6, v5                         // 000000000140: 320A0B06
v_lshlrev_b32  v5, 2, v5                              // 000000000144: 240A0A82
v_add_u32     v6, vcc, 24, v5                         // 000000000148: 320C0A98
ds_read2st64_b32  v[6:7], v6 offset0:4                // 00000000014C: D8700004 06000006
ds_read2_b32  v[8:9], v5 offset1:1                    // 000000000154: D86E0100 08000005
ds_read2_b32  v[10:11], v5 offset0:2 offset1:3        // 00000000015C: D86E0302 0A000005
ds_read2_b32  v[12:13], v5 offset0:4 offset1:5        // 000000000164: D86E0504 0C000005
s_buffer_load_dwordx2  s[28:29], s[8:11], 0x14        // 00000000016C: C0260704 00000014
v_add_u32     v14, vcc, 0x00000400, v5                // 000000000174: 321C0AFF 00000400
v_add_u32     v15, vcc, 0x00000800, v5                // 00000000017C: 321E0AFF 00000800
s_waitcnt     lgkmcnt(0)                              // 000000000184: BF8C007F
v_subrev_f32  v8, v8, v9                              // 000000000188: 06101308
v_subrev_f32  v9, v9, v10                             // 00000000018C: 06121509
v_subrev_f32  v10, v10, v11                           // 000000000190: 0614170A
v_subrev_f32  v11, v11, v12                           // 000000000194: 0616190B
v_subrev_f32  v12, v12, v13                           // 000000000198: 06181B0C
ds_read2_b32  v[16:17], v14 offset1:1                 // 00000000019C: D86E0100 1000000E
ds_read2_b32  v[18:19], v14 offset0:2 offset1:3       // 0000000001A4: D86E0302 1200000E
ds_read2_b32  v[20:21], v14 offset0:4 offset1:5       // 0000000001AC: D86E0504 1400000E
v_subrev_f32  v7, v13, v7                             // 0000000001B4: 060E0F0D
v_mad_f32     v13, v8, v8, s28                        // 0000000001B8: D1C1000D 00721108
v_mad_f32     v14, v9, v9, s28                        // 0000000001C0: D1C1000E 00721309
v_mad_f32     v22, v10, v10, s28                      // 0000000001C8: D1C10016 0072150A
v_mad_f32     v23, v11, v11, s28                      // 0000000001D0: D1C10017 0072170B
v_mad_f32     v24, v12, v12, s28                      // 0000000001D8: D1C10018 0072190C
v_mad_f32     v25, v7, v7, s28                        // 0000000001E0: D1C10019 00720F07
v_mad_f32     v8, v8, v9, s28                         // 0000000001E8: D1C10008 00721308
v_mul_f32     v13, v13, v14                           // 0000000001F0: 0A1A1D0D
v_mad_f32     v9, v9, v10, s28                        // 0000000001F4: D1C10009 00721509
v_mul_f32     v14, v14, v22                           // 0000000001FC: 0A1C2D0E
v_mad_f32     v10, v10, v11, s28                      // 000000000200: D1C1000A 0072170A
v_mul_f32     v22, v22, v23                           // 000000000208: 0A2C2F16
v_mad_f32     v11, v11, v12, s28                      // 00000000020C: D1C1000B 0072190B
v_mul_f32     v23, v23, v24                           // 000000000214: 0A2E3117
v_mad_f32     v7, v12, v7, s28                        // 000000000218: D1C10007 00720F0C
v_mul_f32     v12, v24, v25                           // 000000000220: 0A183318
v_mul_f32     v8, v8, v8                              // 000000000224: 0A101108
v_mul_f32     v13, s29, v13                           // 000000000228: 0A1A1A1D
v_mul_f32     v9, v9, v9                              // 00000000022C: 0A121309
v_mul_f32     v14, s29, v14                           // 000000000230: 0A1C1C1D
v_mul_f32     v10, v10, v10                           // 000000000234: 0A14150A
v_mul_f32     v22, s29, v22                           // 000000000238: 0A2C2C1D
v_mul_f32     v11, v11, v11                           // 00000000023C: 0A16170B
v_mul_f32     v23, s29, v23                           // 000000000240: 0A2E2E1D
v_mul_f32     v7, v7, v7                              // 000000000244: 0A0E0F07
v_mul_f32     v12, s29, v12                           // 000000000248: 0A18181D
v_cmp_gt_f32  s[28:29], v8, v13                       // 00000000024C: D044001C 00021B08
v_cmp_gt_f32  s[30:31], v9, v14                       // 000000000254: D044001E 00021D09
v_cmp_gt_f32  vcc, v10, v22                           // 00000000025C: 7C882D0A
v_cmp_gt_f32  s[32:33], v11, v23                      // 000000000260: D0440020 00022F0B
v_cmp_gt_f32  s[34:35], v7, v12                       // 000000000268: D0440022 00021907
s_or_b64      s[36:37], s[28:29], s[30:31]            // 000000000270: 87A41E1C
s_or_b64      s[38:39], s[30:31], vcc                 // 000000000274: 87A66A1E
s_or_b64      s[40:41], vcc, s[32:33]                 // 000000000278: 87A8206A
s_or_b64      s[42:43], s[32:33], s[34:35]            // 00000000027C: 87AA2220
s_waitcnt     lgkmcnt(1)                              // 000000000280: BF8C017F
v_cndmask_b32  v7, v18, v17, s[36:37]                 // 000000000284: D1000007 00922312
v_cndmask_b32  v8, v19, v18, s[38:39]                 // 00000000028C: D1000008 009A2513
v_cndmask_b32  v9, v18, v19, s[38:39]                 // 000000000294: D1000009 009A2712
s_waitcnt     lgkmcnt(0)                              // 00000000029C: BF8C007F
v_cndmask_b32  v10, v20, v19, s[40:41]                // 0000000002A0: D100000A 00A22714
v_cndmask_b32  v11, v19, v20, s[40:41]                // 0000000002A8: D100000B 00A22913
v_cndmask_b32  v12, v20, v21, s[42:43]                // 0000000002B0: D100000C 00AA2B14
v_cndmask_b32  v13, v7, v16, s[28:29]                 // 0000000002B8: D100000D 00722107
v_cndmask_b32  v14, v9, v20, vcc                      // 0000000002C0: 001C2909
v_cndmask_b32  v16, v8, v17, s[30:31]                 // 0000000002C4: D1000010 007A2308
v_cndmask_b32  v17, v11, v21, s[32:33]                // 0000000002CC: D1000011 00822B0B
v_cndmask_b32  v21, v10, v18, vcc                     // 0000000002D4: 002A250A
v_cndmask_b32  v6, v12, v6, s[34:35]                  // 0000000002D8: D1000006 008A0D0C
v_add_f32     v13, v13, v14                           // 0000000002E0: 021A1D0D
v_add_f32     v14, v16, v17                           // 0000000002E4: 021C2310
v_add_f32     v6, v21, v6                             // 0000000002E8: 020C0D15
v_mac_f32     v7, 0.5, v13                            // 0000000002EC: 2C0E1AF0
v_mac_f32     v8, 0.5, v14                            // 0000000002F0: 2C101CF0
v_mac_f32     v10, 0.5, v6                            // 0000000002F4: 2C140CF0
v_add_f32     v6, v18, v7                             // 0000000002F8: 020C0F12
v_add_f32     v7, v19, v8                             // 0000000002FC: 020E1113
v_add_f32     v8, v20, v10                            // 000000000300: 02101514
v_add_f32     v6, v9, v6                              // 000000000304: 020C0D09
v_add_f32     v7, v11, v7                             // 000000000308: 020E0F0B
v_add_f32     v8, v12, v8                             // 00000000030C: 0210110C
v_mul_f32     v6, 0x3e800000, v6                      // 000000000310: 0A0C0CFF 3E800000
v_mul_f32     v7, 0x3e800000, v7                      // 000000000318: 0A0E0EFF 3E800000
v_mul_f32     v8, 0x3e800000, v8                      // 000000000320: 0A1010FF 3E800000
ds_write2_b32  v15, v6, v7 offset1:1                  // 000000000328: D81C0100 0007060F
ds_write_b32  v5, v8 offset:2056                      // 000000000330: D81A0808 00000805
label_00CE:
s_and_b64     exec, s[14:15], s[0:1]                  // 000000000338: 86FE000E
s_cbranch_execz  label_0138                           // 00000000033C: BF880068
s_mov_b32     s0, 0x38e38e39                          // 000000000340: BE8000FF 38E38E39
v_mul_hi_u32  v5, v4, s0                              // 000000000348: D2860005 00000104
v_lshrrev_b32  v5, 1, v5                              // 000000000350: 200A0A81
v_mul_lo_u32  v6, 9, v5                               // 000000000354: D2850006 00020A89
v_sub_u32     v4, vcc, v4, v6                         // 00000000035C: 34080D04
v_lshlrev_b32  v5, 5, v5                              // 000000000360: 240A0A85
v_add_u32     v4, vcc, v4, v5                         // 000000000364: 32080B04
v_lshlrev_b32  v4, 2, v4                              // 000000000368: 24080882
ds_read2_b32  v[5:6], v4 offset0:2 offset1:18         // 00000000036C: D86E1202 05000004
ds_read2_b32  v[7:8], v4 offset0:34 offset1:50        // 000000000374: D86E3222 07000004
ds_read2_b32  v[9:10], v4 offset0:66 offset1:82       // 00000000037C: D86E5242 09000004
s_buffer_load_dwordx2  s[0:1], s[8:11], 0x14          // 000000000384: C0260004 00000014
v_add_u32     v11, vcc, 0x00000800, v4                // 00000000038C: 321608FF 00000800
ds_read2_b32  v[12:13], v11 offset1:16                // 000000000394: D86E1000 0C00000B
ds_read2_b32  v[14:15], v11 offset0:32 offset1:48     // 00000000039C: D86E3020 0E00000B
ds_read2_b32  v[16:17], v11 offset0:64 offset1:80     // 0000000003A4: D86E5040 1000000B
s_waitcnt     lgkmcnt(0)                              // 0000000003AC: BF8C007F
v_subrev_f32  v5, v5, v6                              // 0000000003B0: 060A0D05
v_subrev_f32  v6, v6, v7                              // 0000000003B4: 060C0F06
v_subrev_f32  v7, v7, v8                              // 0000000003B8: 060E1107
v_subrev_f32  v8, v8, v9                              // 0000000003BC: 06101308
v_subrev_f32  v9, v9, v10                             // 0000000003C0: 06121509
v_mad_f32     v10, v5, v5, s0                         // 0000000003C4: D1C1000A 00020B05
v_mad_f32     v11, v6, v6, s0                         // 0000000003CC: D1C1000B 00020D06
v_mad_f32     v18, v7, v7, s0                         // 0000000003D4: D1C10012 00020F07
v_mad_f32     v19, v8, v8, s0                         // 0000000003DC: D1C10013 00021108
v_mad_f32     v20, v9, v9, s0                         // 0000000003E4: D1C10014 00021309
v_mad_f32     v5, v5, v6, s0                          // 0000000003EC: D1C10005 00020D05
v_mul_f32     v10, v10, v11                           // 0000000003F4: 0A14170A
v_mad_f32     v6, v6, v7, s0                          // 0000000003F8: D1C10006 00020F06
v_mul_f32     v11, v11, v18                           // 000000000400: 0A16250B
v_mad_f32     v7, v7, v8, s0                          // 000000000404: D1C10007 00021107
v_mul_f32     v18, v18, v19                           // 00000000040C: 0A242712
v_mad_f32     v8, v8, v9, s0                          // 000000000410: D1C10008 00021308
v_mul_f32     v9, v19, v20                            // 000000000418: 0A122913
v_mul_f32     v5, v5, v5                              // 00000000041C: 0A0A0B05
v_mul_f32     v10, s1, v10                            // 000000000420: 0A141401
v_mul_f32     v6, v6, v6                              // 000000000424: 0A0C0D06
v_mul_f32     v11, s1, v11                            // 000000000428: 0A161601
v_mul_f32     v7, v7, v7                              // 00000000042C: 0A0E0F07
v_mul_f32     v18, s1, v18                            // 000000000430: 0A242401
v_mul_f32     v8, v8, v8                              // 000000000434: 0A101108
v_mul_f32     v9, s1, v9                              // 000000000438: 0A121201
v_cmp_gt_f32  s[0:1], v5, v10                         // 00000000043C: D0440000 00021505
v_cmp_gt_f32  s[28:29], v6, v11                       // 000000000444: D044001C 00021706
v_cmp_gt_f32  s[30:31], v7, v18                       // 00000000044C: D044001E 00022507
v_cmp_gt_f32  s[32:33], v8, v9                        // 000000000454: D0440020 00021308
s_or_b64      s[34:35], s[0:1], s[28:29]              // 00000000045C: 87A21C00
s_or_b64      vcc, s[28:29], s[30:31]                 // 000000000460: 87EA1E1C
s_or_b64      s[36:37], s[30:31], s[32:33]            // 000000000464: 87A4201E
v_cndmask_b32  v5, v14, v13, s[34:35]                 // 000000000468: D1000005 008A1B0E
v_cndmask_b32  v6, v15, v14, vcc                      // 000000000470: 000C1D0F
v_cndmask_b32  v7, v14, v15, vcc                      // 000000000474: 000E1F0E
v_cndmask_b32  v8, v15, v16, s[36:37]                 // 000000000478: D1000008 0092210F
v_cndmask_b32  v9, v5, v12, s[0:1]                    // 000000000480: D1000009 00021905
v_cndmask_b32  v10, v7, v16, s[30:31]                 // 000000000488: D100000A 007A2107
v_cndmask_b32  v11, v6, v13, s[28:29]                 // 000000000490: D100000B 00721B06
v_cndmask_b32  v12, v8, v17, s[32:33]                 // 000000000498: D100000C 00822308
v_add_f32     v9, v9, v10                             // 0000000004A0: 02121509
v_add_f32     v10, v11, v12                           // 0000000004A4: 0214190B
v_mac_f32     v5, 0.5, v9                             // 0000000004A8: 2C0A12F0
v_mac_f32     v6, 0.5, v10                            // 0000000004AC: 2C0C14F0
v_add_f32     v5, v14, v5                             // 0000000004B0: 020A0B0E
v_add_f32     v6, v15, v6                             // 0000000004B4: 020C0D0F
v_add_f32     v5, v7, v5                              // 0000000004B8: 020A0B07
v_add_f32     v6, v8, v6                              // 0000000004BC: 020C0D08
v_mul_f32     v5, 0x3e800000, v5                      // 0000000004C0: 0A0A0AFF 3E800000
v_mul_f32     v6, 0x3e800000, v6                      // 0000000004C8: 0A0C0CFF 3E800000
v_add_u32     v4, vcc, 0x00000400, v4                 // 0000000004D0: 320808FF 00000400
ds_write2_b32  v4, v5, v6 offset1:16                  // 0000000004D8: D81C1000 00060504
label_0138:
s_mov_b64     exec, s[14:15]                          // 0000000004E0: BEFE010E
s_load_dwordx8  s[28:35], s[2:3], 0x20                // 0000000004E4: C00E0701 00000020
v_lshlrev_b32  v4, 1, v2                              // 0000000004EC: 24080481
v_lshlrev_b32  v26, 1, v3                             // 0000000004F0: 24340681
v_cvt_f32_u32  v6, v4                                 // 0000000004F4: 7E0C0D04
v_cvt_f32_u32  v7, v26                                // 0000000004F8: 7E0E0D1A
v_cvt_f32_u32  v2, v2                                 // 0000000004FC: 7E040D02
v_cvt_f32_u32  v3, v3                                 // 000000000500: 7E060D03
v_mul_f32     v6, s18, v6                             // 000000000504: 0A0C0C12
v_mul_f32     v7, s19, v7                             // 000000000508: 0A0E0E13
v_mul_f32     v2, s16, v2                             // 00000000050C: 0A040410
v_mul_f32     v3, s17, v3                             // 000000000510: 0A060611
s_waitcnt     lgkmcnt(0)                              // 000000000514: BF8C007F
image_gather4_lz  v6, v6, s[28:35], s[4:7]            // 000000000518: F11C0100 00270606
s_nop         0x0000                                  // 000000000520: BF800000
image_gather4_lz  v10, v2, s[20:27], s[4:7]           // 000000000524: F11C0100 00250A02
s_buffer_load_dwordx2  s[0:1], s[8:11], 0x20          // 00000000052C: C0260004 00000020
s_buffer_load_dwordx4  s[4:7], s[8:11], 0x10          // 000000000534: C02A0104 00000010
v_lshlrev_b32  v1, 4, v1                              // 00000000053C: 24020284
v_add_u32     v0, vcc, v0, v1                         // 000000000540: 32000300
v_lshlrev_b32  v0, 2, v0                              // 000000000544: 24000082
s_waitcnt     vmcnt(1) & lgkmcnt(0)                   // 000000000548: BF8C0071
v_add_f32     v1, s0, v6                              // 00000000054C: 02020C00
v_add_u32     v2, vcc, 0x00000440, v0                 // 000000000550: 320400FF 00000440
v_add_f32     v3, s0, v7                              // 000000000558: 02060E00
s_waitcnt     vmcnt(0)                                // 00000000055C: BF8C0F70
v_mad_f32     v6, v1, s1, -v11                        // 000000000560: D1C10006 842C0301
v_add_f32     v7, s0, v8                              // 000000000568: 020E1000
v_mad_f32     v8, v1, s1, -v10                        // 00000000056C: D1C10008 84280301
v_mad_f32     v14, v1, s1, -v12                       // 000000000574: D1C1000E 84300301
v_mad_f32     v1, v1, s1, -v13                        // 00000000057C: D1C10001 84340301
v_add_f32     v6, abs(v6), s7                         // 000000000584: D1010106 00000F06
v_mad_f32     v15, v3, s1, -v12                       // 00000000058C: D1C1000F 84300303
v_add_u32     v0, vcc, 0x00000400, v0                 // 000000000594: 320000FF 00000400
v_add_f32     v9, s0, v9                              // 00000000059C: 02121200
v_add_f32     v8, abs(v8), s7                         // 0000000005A0: D1010108 00000F08
v_add_f32     v14, abs(v14), s7                       // 0000000005A8: D101010E 00000F0E
v_add_f32     v1, abs(v1), s7                         // 0000000005B0: D1010101 00000F01
v_rcp_f32     v6, v6                                  // 0000000005B8: 7E0C4506
v_mad_f32     v16, v3, s1, -v11                       // 0000000005BC: D1C10010 842C0303
v_mad_f32     v17, v3, s1, -v13                       // 0000000005C4: D1C10011 84340303
v_mad_f32     v3, v3, s1, -v10                        // 0000000005CC: D1C10003 84280303
v_add_f32     v15, s7, abs(v15)                       // 0000000005D4: D101020F 00021E07
v_mad_f32     v18, v7, s1, -v13                       // 0000000005DC: D1C10012 84340307
ds_read2_b32  v[19:20], v2 offset1:1                  // 0000000005E4: D86E0100 13000002
v_rcp_f32     v2, v8                                  // 0000000005EC: 7E044508
v_rcp_f32     v8, v14                                 // 0000000005F0: 7E10450E
v_rcp_f32     v1, v1                                  // 0000000005F4: 7E024501
v_add_f32     v14, s7, abs(v16)                       // 0000000005F8: D101020E 00022007
v_add_f32     v16, s7, abs(v17)                       // 000000000600: D1010210 00022207
v_add_f32     v3, s7, abs(v3)                         // 000000000608: D1010203 00020607
v_rcp_f32     v15, v15                                // 000000000610: 7E1E450F
v_mad_f32     v17, v7, s1, -v12                       // 000000000614: D1C10011 84300307
v_mad_f32     v21, v7, s1, -v10                       // 00000000061C: D1C10015 84280307
v_mad_f32     v7, v7, s1, -v11                        // 000000000624: D1C10007 842C0307
v_add_f32     v18, s7, abs(v18)                       // 00000000062C: D1010212 00022407
v_mad_f32     v10, v9, s1, -v10                       // 000000000634: D1C1000A 84280309
v_rcp_f32     v14, v14                                // 00000000063C: 7E1C450E
v_rcp_f32     v16, v16                                // 000000000640: 7E204510
v_rcp_f32     v3, v3                                  // 000000000644: 7E064503
v_add_f32     v17, s7, abs(v17)                       // 000000000648: D1010211 00022207
v_add_f32     v21, s7, abs(v21)                       // 000000000650: D1010215 00022A07
v_add_f32     v7, s7, abs(v7)                         // 000000000658: D1010207 00020E07
v_rcp_f32     v18, v18                                // 000000000660: 7E244512
v_mad_f32     v13, v9, s1, -v13                       // 000000000664: D1C1000D 84340309
v_mad_f32     v11, v9, s1, -v11                       // 00000000066C: D1C1000B 842C0309
v_mad_f32     v12, v9, s1, -v12                       // 000000000674: D1C1000C 84300309
v_add_f32     v9, s7, abs(v10)                        // 00000000067C: D1010209 00021407
ds_read2_b32  v[22:23], v0 offset0:1                  // 000000000684: D86E0001 16000000
v_rcp_f32     v0, v17                                 // 00000000068C: 7E004511
v_rcp_f32     v10, v21                                // 000000000690: 7E144515
v_rcp_f32     v7, v7                                  // 000000000694: 7E0E4507
v_add_f32     v13, s7, abs(v13)                       // 000000000698: D101020D 00021A07
v_add_f32     v11, s7, abs(v11)                       // 0000000006A0: D101020B 00021607
v_add_f32     v12, s7, abs(v12)                       // 0000000006A8: D101020C 00021807
v_rcp_f32     v9, v9                                  // 0000000006B0: 7E124509
v_mul_f32     v6, 0x40400000, v6                      // 0000000006B4: 0A0C0CFF 40400000
v_rcp_f32     v13, v13                                // 0000000006BC: 7E1A450D
v_rcp_f32     v11, v11                                // 0000000006C0: 7E16450B
v_rcp_f32     v12, v12                                // 0000000006C4: 7E18450C
v_madmk_f32   v17, v2, 0x41100000, v6                 // 0000000006C8: 2E220D02 41100000
v_madmk_f32   v21, v1, 0x40400000, v8                 // 0000000006D0: 2E2A1101 40400000
v_mul_f32     v15, 0x40400000, v15                    // 0000000006D8: 0A1E1EFF 40400000
v_mul_f32     v2, 0x41100000, v2                      // 0000000006E0: 0A0404FF 41100000
v_add_f32     v17, v17, v21                           // 0000000006E8: 02222B11
v_madmk_f32   v21, v14, 0x41100000, v15               // 0000000006EC: 2E2A1F0E 41100000
v_madmk_f32   v24, v3, 0x40400000, v16                // 0000000006F4: 2E302103 40400000
v_mul_f32     v18, 0x40400000, v18                    // 0000000006FC: 0A2424FF 40400000
v_add_f32     v17, s4, v17                            // 000000000704: 02222204
s_waitcnt     lgkmcnt(1)                              // 000000000708: BF8C017F
v_mul_f32     v2, v19, v2                             // 00000000070C: 0A040513
v_mul_f32     v14, 0x41100000, v14                    // 000000000710: 0A1C1CFF 41100000
v_add_f32     v21, v21, v24                           // 000000000718: 022A3115
v_madmk_f32   v24, v0, 0x41100000, v18                // 00000000071C: 2E302500 41100000
v_madmk_f32   v25, v7, 0x40400000, v10                // 000000000724: 2E321507 40400000
v_mul_f32     v9, 0x40400000, v9                      // 00000000072C: 0A1212FF 40400000
s_load_dwordx8  s[8:15], s[12:13], 0x00               // 000000000734: C00E0206 00000000
v_mac_f32     v2, v20, v6                             // 00000000073C: 2C040D14
v_rcp_f32     v6, v17                                 // 000000000740: 7E0C4511
v_mul_f32     v14, v20, v14                           // 000000000744: 0A1C1D14
v_add_f32     v17, s4, v21                            // 000000000748: 02222A04
v_mul_f32     v0, 0x41100000, v0                      // 00000000074C: 0A0000FF 41100000
v_add_f32     v21, v24, v25                           // 000000000754: 022A3318
v_madmk_f32   v24, v13, 0x41100000, v9                // 000000000758: 2E30130D 41100000
v_madmk_f32   v25, v12, 0x40400000, v11               // 000000000760: 2E32170C 40400000
v_mul_f32     v1, 0x40400000, v1                      // 000000000768: 0A0202FF 40400000
s_waitcnt     lgkmcnt(0)                              // 000000000770: BF8C007F
v_mac_f32     v2, v22, v8                             // 000000000774: 2C041116
v_mac_f32     v14, v22, v15                           // 000000000778: 2C1C1F16
v_rcp_f32     v8, v17                                 // 00000000077C: 7E104511
v_mul_f32     v0, v22, v0                             // 000000000780: 0A000116
v_add_f32     v15, s4, v21                            // 000000000784: 021E2A04
v_mul_f32     v13, 0x41100000, v13                    // 000000000788: 0A1A1AFF 41100000
v_add_f32     v17, v24, v25                           // 000000000790: 02223318
v_mac_f32     v2, v23, v1                             // 000000000794: 2C040317
v_mul_f32     v1, 0x40400000, v3                      // 000000000798: 0A0206FF 40400000
v_mac_f32     v14, v23, v16                           // 0000000007A0: 2C1C2117
v_mac_f32     v0, v23, v18                            // 0000000007A4: 2C002517
v_rcp_f32     v3, v15                                 // 0000000007A8: 7E06450F
v_add_f32     v15, s4, v17                            // 0000000007AC: 021E2204
v_mul_f32     v13, v23, v13                           // 0000000007B0: 0A1A1B17
v_add_f32     v2, s4, v2                              // 0000000007B4: 02040404
v_mac_f32     v14, v19, v1                            // 0000000007B8: 2C1C0313
v_mul_f32     v1, 0x40400000, v7                      // 0000000007BC: 0A020EFF 40400000
v_mac_f32     v0, v19, v10                            // 0000000007C4: 2C001513
v_mac_f32     v13, v19, v9                            // 0000000007C8: 2C1A1313
v_rcp_f32     v7, v15                                 // 0000000007CC: 7E0E450F
v_add_u32     v25, vcc, -1, v4                        // 0000000007D0: 323208C1
v_mul_f32     v9, v2, v6                              // 0000000007D4: 0A120D02
v_add_f32     v6, s4, v14                             // 0000000007D8: 020C1C04
v_mac_f32     v0, v20, v1                             // 0000000007DC: 2C000314
v_mul_f32     v1, 0x40400000, v12                     // 0000000007E0: 0A0218FF 40400000
v_mac_f32     v13, v20, v11                           // 0000000007E8: 2C1A1714
v_mul_f32     v8, v6, v8                              // 0000000007EC: 0A101106
v_add_f32     v0, s4, v0                              // 0000000007F0: 02000004
v_mac_f32     v13, v22, v1                            // 0000000007F4: 2C1A0316
v_add_u32     v1, vcc, -1, v26                        // 0000000007F8: 320234C1
v_mov_b32     v10, v9                                 // 0000000007FC: 7E140309
v_mov_b32     v11, v9                                 // 000000000800: 7E160309
v_mov_b32     v12, v9                                 // 000000000804: 7E180309
image_store   v[9:12], v[25:28], s[8:15] dmask:0xf unorm // 000000000808: F0201F00 00020919
v_mul_f32     v3, v0, v3                              // 000000000810: 0A060700
v_add_f32     v2, s4, v13                             // 000000000814: 02041A04
v_mov_b32     v5, v26                                 // 000000000818: 7E0A031A
v_mov_b32     v9, v8                                  // 00000000081C: 7E120308
v_mov_b32     v10, v8                                 // 000000000820: 7E140308
v_mov_b32     v11, v8                                 // 000000000824: 7E160308
image_store   v[8:11], v[4:7], s[8:15] dmask:0xf unorm // 000000000828: F0201F00 00020804
v_mul_f32     v2, v2, v7                              // 000000000830: 0A040F02
v_mov_b32     v0, v4                                  // 000000000834: 7E000304
v_mov_b32     v4, v3                                  // 000000000838: 7E080303
v_mov_b32     v5, v3                                  // 00000000083C: 7E0A0303
v_mov_b32     v6, v3                                  // 000000000840: 7E0C0303
image_store   v[3:6], v[0:3], s[8:15] dmask:0xf unorm // 000000000844: F0201F00 00020300
v_mov_b32     v0, v25                                 // 00000000084C: 7E000319
v_mov_b32     v3, v2                                  // 000000000850: 7E060302
v_mov_b32     v4, v2                                  // 000000000854: 7E080302
v_mov_b32     v5, v2                                  // 000000000858: 7E0A0302
image_store   v[2:5], v[0:3], s[8:15] dmask:0xf unorm // 00000000085C: F0201F00 00020200
s_endpgm                                              // 000000000190: BF810000
